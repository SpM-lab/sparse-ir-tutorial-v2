Traceback (most recent call last):
  File "/home/runner/work/sparse-ir-tutorial-v2/sparse-ir-tutorial-v2/.venv/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/home/runner/work/sparse-ir-tutorial-v2/sparse-ir-tutorial-v2/.venv/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/runner/work/sparse-ir-tutorial-v2/sparse-ir-tutorial-v2/.venv/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/opt/hostedtoolcache/Python/3.13.9/x64/lib/python3.13/asyncio/base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/home/runner/work/sparse-ir-tutorial-v2/sparse-ir-tutorial-v2/.venv/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/home/runner/work/sparse-ir-tutorial-v2/sparse-ir-tutorial-v2/.venv/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/work/sparse-ir-tutorial-v2/sparse-ir-tutorial-v2/.venv/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# initialize calculation
IR_basis_set = sparse_ir.FiniteTempBasisSet(beta, wmax, eps=IR_tol)
mesh = Mesh(IR_basis_set, nk1, nk2)
solver = TPSCSolver(mesh, U, n)

# perform TPSC calculation
solver.solve()
------------------

----- stdout -----
Setting U_sp = 12.44211883473281
------------------

[31m---------------------------------------------------------------------------[39m
[31mValueError[39m                                Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[5][39m[32m, line 7[39m
[32m      4[39m solver = TPSCSolver(mesh, U, n)
[32m      6[39m [38;5;66;03m# perform TPSC calculation[39;00m
[32m----> [39m[32m7[39m [43msolver[49m[43m.[49m[43msolve[49m[43m([49m[43m)[49m

[36mCell[39m[36m [39m[32mIn[4][39m[32m, line 41[39m, in [36mTPSCSolver.solve[39m[34m(self)[39m
[32m     38[39m [38;5;28mself[39m.docc_calc()
[32m     40[39m [38;5;66;03m# determine charge vertex U_ch[39;00m
[32m---> [39m[32m41[39m [38;5;28;43mself[39;49m[43m.[49m[43mcharge_vertex_calc[49m[43m([49m[43m)[49m
[32m     43[39m [38;5;66;03m# set spin and charge susceptibility[39;00m
[32m     44[39m [38;5;28mself[39m.chi_spin   = [38;5;28mself[39m.RPA_term_calc( [38;5;28mself[39m.U_sp)

[36mCell[39m[36m [39m[32mIn[4][39m[32m, line 136[39m, in [36mTPSCSolver.charge_vertex_calc[39m[34m(self)[39m
[32m    133[39m chi_trace = [38;5;28mself[39m.chi_qtrace_calc
[32m    134[39m sfc_eq = [38;5;28;01mlambda[39;00m U_ch : [32m2[39m*chi_trace(-U_ch) - [38;5;28mself[39m.n + ([32m1[39m - [32m2[39m*[38;5;28mself[39m.docc)*[38;5;28mself[39m.n**[32m2[39m
[32m--> [39m[32m136[39m [38;5;28mself[39m.U_ch = [43msc[49m[43m.[49m[43moptimize[49m[43m.[49m[43mbrentq[49m[43m([49m[43msfc_eq[49m[43m,[49m[43m [49m[43mU_a[49m[43m,[49m[43m [49m[43mU_b[49m[43m,[49m[43m [49m[43mrtol[49m[43m [49m[43m=[49m[43m [49m[38;5;28;43mself[39;49m[43m.[49m[43mU_sfc_tol[49m[43m)[49m

[36mFile [39m[32m~/work/sparse-ir-tutorial-v2/sparse-ir-tutorial-v2/.venv/lib/python3.13/site-packages/scipy/optimize/_zeros_py.py:846[39m, in [36mbrentq[39m[34m(f, a, b, args, xtol, rtol, maxiter, full_output, disp)[39m
[32m    844[39m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([33mf[39m[33m"[39m[33mrtol too small ([39m[38;5;132;01m{[39;00mrtol[38;5;132;01m:[39;00m[33mg[39m[38;5;132;01m}[39;00m[33m < [39m[38;5;132;01m{[39;00m_rtol[38;5;132;01m:[39;00m[33mg[39m[38;5;132;01m}[39;00m[33m)[39m[33m"[39m)
[32m    845[39m f = _wrap_nan_raise(f)
[32m--> [39m[32m846[39m r = [43m_zeros[49m[43m.[49m[43m_brentq[49m[43m([49m[43mf[49m[43m,[49m[43m [49m[43ma[49m[43m,[49m[43m [49m[43mb[49m[43m,[49m[43m [49m[43mxtol[49m[43m,[49m[43m [49m[43mrtol[49m[43m,[49m[43m [49m[43mmaxiter[49m[43m,[49m[43m [49m[43margs[49m[43m,[49m[43m [49m[43mfull_output[49m[43m,[49m[43m [49m[43mdisp[49m[43m)[49m
[32m    847[39m [38;5;28;01mreturn[39;00m results_c(full_output, r, [33m"[39m[33mbrentq[39m[33m"[39m)

[31mValueError[39m: f(a) and f(b) must have different signs

